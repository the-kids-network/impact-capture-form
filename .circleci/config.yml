# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/php:7.1-browsers
        environment:
          DB_CONNECTION=pgsql
          DB_HOST=127.0.0.1
          DB_PORT=5432
          DB_DATABASE=homestead
          DB_USERNAME=homestead
          DB_PASSWORD=secret
          APP_ENV=circleci
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/mysql:5.6
        environment:
          MYSQL_USER: homestead
          MYSQL_PASSWORD: secret

    working_directory: ~/repo

    steps:
      - run:
          name: Install system packages
          command: sudo apt-get update && sudo apt-get -y install git libpng-dev
      - run:
          name: Install PHP extensions
          command: |
            sudo docker-php-ext-install pdo
            sudo docker-php-ext-install gd
      - checkout
      - run:
          name: Install Composer
          command: |
            php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
            php composer-setup.php
            php -r "unlink('composer-setup.php');"
      - run:
          name: Display PHP information
          command: |
            php -v
            php composer.phar --version
      - run:
          name: Install project dependencies
          command: php composer.phar install
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "composer.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.json" }}

      - run: php artisan migrate:refresh --seed
      # run tests!
      - run:
          name: Run Unit tests
          command: vendor/bin/phpunit